basePath: /
definitions:
  internal_api.User:
    properties:
      id:
        example: 1
        type: integer
      phone:
        example: "+14165551234"
        type: string
      registered_at:
        example: "2025-01-07T12:34:56Z"
        type: string
    type: object
  internal_api.reqPhone:
    properties:
      phone:
        example: "+14165551234"
        type: string
    required:
    - phone
    type: object
  internal_api.verifyReq:
    properties:
      otp:
        example: "123456"
        type: string
      phone:
        example: "+14165551234"
        type: string
    required:
    - otp
    - phone
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A backend service for OTP-based authentication with user management
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: OTP Authentication Service API
  version: "1.0"
paths:
  /auth/request-otp:
    post:
      consumes:
      - application/json
      description: Generate and send OTP to the provided phone number
      parameters:
      - description: Phone number in E.164 format
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_api.reqPhone'
      produces:
      - application/json
      responses:
        "200":
          description: OTP generated successfully
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "429":
          description: Rate limit exceeded
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Request OTP
      tags:
      - Authentication
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      description: Verify OTP and authenticate user, returns JWT token
      parameters:
      - description: Phone number and OTP
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_api.verifyReq'
      produces:
      - application/json
      responses:
        "200":
          description: Authentication successful
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request or OTP
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Verify OTP
      tags:
      - Authentication
  /health:
    get:
      consumes:
      - application/json
      description: Check if the service is running
      produces:
      - application/json
      responses:
        "200":
          description: Service is healthy
          schema:
            additionalProperties: true
            type: object
      summary: Health check
      tags:
      - System
  /users:
    get:
      consumes:
      - application/json
      description: Get paginated list of users with optional search
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: Search by phone number
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Users list with pagination
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: List users
      tags:
      - Users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User found
          schema:
            $ref: '#/definitions/internal_api.User'
        "400":
          description: Invalid user ID
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get user by ID
      tags:
      - Users
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
